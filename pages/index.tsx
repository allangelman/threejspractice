import Head from "next/head";
import { Canvas } from "@react-three/fiber";
import { Geometry } from "../components/Geo";

export default function Home() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/threejspractice/favicon.ico" />
      </Head>
      <div className="px-4 md:px-12 lg:mx-auto lg:max-w-[1184px] h-full">
        <div className="text-5xl grow whitespace-nowrap max-md:text-3xl mb-8 max-md:pb-4">
          three.js practice
        </div>
        <div className="w-full h-[600px] mx-auto my-auto bg-black">
          <Canvas
            camera={{ fov: 50, position: [1, 5, 5] }}
            className="bg-green-500"
          >
            <Geometry />
          </Canvas>
        </div>
      </div>
    </>
  );
}

// import { useEffect, useRef } from "react";
// import {
//   BoxGeometry,
//   MeshBasicMaterial,
//   Mesh,
//   PerspectiveCamera,
//   WebGLRenderer,
//   Scene,
//   Clock,
// } from "three";
// import { OrbitControls } from "three/examples/jsm/controls/OrbitControls";
// // Canvas
// // const canvas = document.querySelector("canvas.webgl");

// export default function Three() {
//   const canvas = useRef<HTMLCanvasElement | null>(null);
//   // const clock = new Clock().getElapsedTime();
//   // clock.getElapsedTime();
//   useEffect(() => {
//     if (!canvas.current) return;
//     console.log("render");
//     // you could put your three.js code in a function…
//     renderScene(canvas.current);
//     // …or in a class
//     // new Renderer(canvas.current);
//   }, []);

//   return <canvas ref={canvas} />;
// }

// function renderScene(canvas: HTMLCanvasElement) {
//   // Scene
//   const scene = new Scene();

//   /**
//    * Object
//    */
//   const geometry = new BoxGeometry(1, 2, 1);
//   const material = new MeshBasicMaterial({ color: 0xff0000 });
//   const mesh = new Mesh(geometry, material);
//   scene.add(mesh);

//   /**
//    * Sizes
//    */
//   const sizes = {
//     width: 800,
//     height: 600,
//   };

//   /**
//    * Camera
//    */
//   const camera = new PerspectiveCamera(75, sizes.width / sizes.height);
//   camera.position.z = 3;
//   scene.add(camera);

//   const controls = new OrbitControls(camera, canvas);
//   controls.enableDamping;
//   /**
//    * Renderer
//    */
//   const renderer = new WebGLRenderer({
//     canvas: canvas,
//   });
//   renderer.setSize(sizes.width, sizes.height);

//   const clock = new Clock();
//   const tick = () => {
//     const elapsedTime = clock.getElapsedTime();

//     // Update controls
//     controls.update();

//     // Render
//     renderer.render(scene, camera);

//     // Call tick again on the next frame
//     window.requestAnimationFrame(tick);
//   };

//   tick();
// }

// // class Renderer {
// //   constructor(canvas: HTMLCanvasElement) {}
// // }
